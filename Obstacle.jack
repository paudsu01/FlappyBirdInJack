class Obstacle{
	
	field int column;
	field int opening_row;
	field int width;
	field int gap;
	field boolean obstacle_passed;

	constructor Obstacle new(int col, int open){
		let column = col;
		let opening_row = open;
		let width = 55;
		let gap = 130;
		let obstacle_passed = false;
		return this;
	}
	
	method int get_column(){
		return column;
	}
	
	method void set_obstacle_passed(){
		let obstacle_passed = true;
		return;
	}

	method boolean is_obstacle_passed(){
		return obstacle_passed;
	}

	method int get_width(){
		return width;
	}
	method int get_gap(){
		return gap;
	}
	method int get_opening_row(){
		return opening_row;
	}
	
	method void move(){
		let column = column - 2;
		return;
	}
	
	method void draw(){
		do Screen.drawLine(column, 0, column, opening_row );
		do Screen.drawLine(column + width, 0, column + width, opening_row );
		do Screen.drawLine(column, opening_row, column + width, opening_row );

		do Screen.drawLine(column, opening_row + gap , column, 234 );
		do Screen.drawLine(column + width, opening_row + gap, column + width, 234 );
		do Screen.drawLine(column, opening_row + gap, column + width, opening_row + gap);
		return;
	}
	
	method void dispose(){
		do Memory.deAlloc(this);
		return;
	}
}
